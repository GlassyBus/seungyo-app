import 'package:flutter/material.dart';
import 'package:flutter/foundation.dart';import 'package:flutter/services.dart';
import 'package:provider/provider.dart';
import 'package:intl/date_symbol_data_local.dart';
import 'package:sqlite3_flutter_libs/sqlite3_flutter_libs.dart';
import 'package:timezone/data/latest.dart' as tz;

import 'package:seungyo/routes.dart';
import 'package:seungyo/view/auth/auth_screen.dart';
import 'package:seungyo/view/main/main_screen.dart';
import 'package:seungyo/view/splash/splash_screen.dart';
import 'package:seungyo/viewmodel/auth_vm.dart';
import 'package:seungyo/viewmodel/splash_vm.dart';
import 'package:seungyo/providers/schedule_provider.dart';
import 'package:seungyo/theme/theme.dart';
import 'package:seungyo/services/database_service.dart';
import 'package:seungyo/services/notification_service.dart';

// Í∏ÄÎ°úÎ≤å ÎÑ§ÎπÑÍ≤åÏù¥ÌÑ∞ ÌÇ§
final GlobalKey<NavigatorState> navigatorKey = GlobalKey<NavigatorState>();

void main() async {
  WidgetsFlutterBinding.ensureInitialized();

  // ÌÉÄÏûÑÏ°¥ Îç∞Ïù¥ÌÑ∞ Ï¥àÍ∏∞Ìôî (ÏïåÎ¶º Ïä§ÏºÄÏ§ÑÎßÅÏùÑ ÏúÑÌï¥ ÌïÑÏöî)
  tz.initializeTimeZones();

  // ÌïúÍµ≠Ïñ¥ locale Îç∞Ïù¥ÌÑ∞ Ï¥àÍ∏∞Ìôî
  await initializeDateFormatting('ko_KR', null);

  // SQLite3 ÌîåÎü¨ÌÑ∞ ÎùºÏù¥Î∏åÎü¨Î¶¨ Ï¥àÍ∏∞Ìôî (AndroidÏóêÏÑú ÌïÑÏàò)
  await applyWorkaroundToOpenSqlite3OnOldAndroidVersions();

  // Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ï¥àÍ∏∞Ìôî
  final dbService = DatabaseService();
  try {
    await dbService.initialize();
    if (kDebugMode) print('DB Ï¥àÍ∏∞Ìôî ÏÑ±Í≥µ');

    // ÎîîÎ≤ÑÍ∑∏: DB ÏÉÅÌÉú ÌôïÏù∏
    if (kDebugMode) print('DB Ï¥àÍ∏∞Ìôî ÏôÑÎ£å. ÏÉÅÌÉú ÌôïÏù∏ Ï§ë...');
    await dbService.printDatabaseStatus();
  } catch (e) {
    if (kDebugMode) print('DB Ï¥àÍ∏∞Ìôî Ïã§Ìå®: $e');
  }

  // ÏïåÎ¶º ÏÑúÎπÑÏä§ Ï¥àÍ∏∞Ìôî
  try {
    await NotificationService().initialize();
    if (kDebugMode) print('üîî ÏïåÎ¶º ÏÑúÎπÑÏä§ Ï¥àÍ∏∞Ìôî ÏÑ±Í≥µ');
  } catch (e) {
    if (kDebugMode) print('‚ùå ÏïåÎ¶º ÏÑúÎπÑÏä§ Ï¥àÍ∏∞Ìôî Ïã§Ìå®: $e');
  }

  SystemChrome.setSystemUIOverlayStyle(
    const SystemUiOverlayStyle(
      statusBarColor: Colors.transparent,
      statusBarIconBrightness: Brightness.dark,
      systemNavigationBarContrastEnforced: false,
      systemNavigationBarDividerColor: Colors.transparent,
      systemNavigationBarIconBrightness: Brightness.dark,
    ),
  );

  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  // Ïï± Ï†ÑÏ≤¥ÏóêÏÑú ÏÇ¨Ïö©Ìï† ÏµúÎåÄ ÎÑàÎπÑ ÏÉÅÏàò
  static const double maxServiceWidth = 540.0;

  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MultiProvider(
      providers: [
        ChangeNotifierProvider(create: (_) => SplashViewModel()),
        ChangeNotifierProvider(create: (_) => AuthViewModel()),
        ChangeNotifierProvider(create: (_) => ScheduleProvider()),
      ],
      child: MaterialApp(
        navigatorKey: navigatorKey,
        title: 'ÏäπÏöî',
        theme: createLightTheme(),
        darkTheme: createDarkTheme(),
        // Ïï± Ï†ÑÏ≤¥Ïùò ÏµúÎåÄ ÎÑàÎπÑ Ï†úÌïúÏùÑ Ï†ÅÏö©ÌïòÎäî builder
        builder: (context, child) {
          return Center(
            child: Container(
              constraints: const BoxConstraints(maxWidth: maxServiceWidth),
              child: child!,
            ),
          );
        },
        themeMode: ThemeMode.light,
        initialRoute: Routes.splash,
        routes: {
          Routes.splash: (context) => const SplashScreen(),
          Routes.auth: (context) => const AuthScreen(),
          Routes.main: (context) => const MainScreen(),
        },
        debugShowCheckedModeBanner: false,
      ),
    );
  }
}
